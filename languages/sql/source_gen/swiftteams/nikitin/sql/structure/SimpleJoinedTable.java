package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class SimpleJoinedTable extends AbstractJoinedTable {
  public static final String concept = "swiftteams.nikitin.sql.structure.SimpleJoinedTable";
  public static final String JOIN_TYPE = "join_type";
  public static final String TABLE_REFERENCE = "table_reference";
  public static final String JOINED_TABLE = "joined_table";
  public static final String CONDITION = "condition";

  public SimpleJoinedTable(SNode node) {
    super(node);
  }

  public SimpleTableRefJoinType getJoin_type() {
    String value = super.getProperty(SimpleJoinedTable.JOIN_TYPE);
    return SimpleTableRefJoinType.parseValue(value);
  }

  public void setJoin_type(SimpleTableRefJoinType value) {
    super.setProperty(SimpleJoinedTable.JOIN_TYPE, value.getValueAsString());
  }

  public AbstractTableReference getTable_reference() {
    return (AbstractTableReference)this.getChild(AbstractTableReference.class, SimpleJoinedTable.TABLE_REFERENCE);
  }

  public void setTable_reference(AbstractTableReference node) {
    super.setChild(SimpleJoinedTable.TABLE_REFERENCE, node);
  }

  public AbstractTableRef getJoined_table() {
    return (AbstractTableRef)this.getChild(AbstractTableRef.class, SimpleJoinedTable.JOINED_TABLE);
  }

  public void setJoined_table(AbstractTableRef node) {
    super.setChild(SimpleJoinedTable.JOINED_TABLE, node);
  }

  public Condition getCondition() {
    return (Condition)this.getChild(Condition.class, SimpleJoinedTable.CONDITION);
  }

  public void setCondition(Condition node) {
    super.setChild(SimpleJoinedTable.CONDITION, node);
  }


  public static SimpleJoinedTable newInstance(SModel sm, boolean init) {
    return (SimpleJoinedTable)SModelUtil_new.instantiateConceptDeclaration("swiftteams.nikitin.sql.structure.SimpleJoinedTable", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static SimpleJoinedTable newInstance(SModel sm) {
    return SimpleJoinedTable.newInstance(sm, false);
  }

}
