package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class StringSequence extends Expression {
  public static final String concept = "swiftteams.nikitin.sql.structure.StringSequence";
  public static final String SEPARATOR = "separator";
  public static final String STRINGS = "strings";

  public StringSequence(SNode node) {
    super(node);
  }

  public String getSeparator() {
    return this.getProperty(StringSequence.SEPARATOR);
  }

  public void setSeparator(String value) {
    this.setProperty(StringSequence.SEPARATOR, value);
  }

  public int getStringsesCount() {
    return this.getChildCount(StringSequence.STRINGS);
  }

  public Iterator<Expression> stringses() {
    return this.children(Expression.class, StringSequence.STRINGS);
  }

  public List<Expression> getStringses() {
    return this.getChildren(Expression.class, StringSequence.STRINGS);
  }

  public void addStrings(Expression node) {
    this.addChild(StringSequence.STRINGS, node);
  }

  public void insertStrings(Expression prev, Expression node) {
    this.insertChild(prev, StringSequence.STRINGS, node);
  }


  public static StringSequence newInstance(SModel sm, boolean init) {
    return (StringSequence)SModelUtil_new.instantiateConceptDeclaration("swiftteams.nikitin.sql.structure.StringSequence", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static StringSequence newInstance(SModel sm) {
    return StringSequence.newInstance(sm, false);
  }

}
