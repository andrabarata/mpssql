package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.BooleanConstant;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ValuesSingleTableInsert extends SingleTableInsert {
  public static final String concept = "swiftteams.nikitin.sql.structure.ValuesSingleTableInsert";
  public static final String RETURNING_CLAUSE = "returning_clause";
  public static final String VALUES = "values";

  public ValuesSingleTableInsert(SNode node) {
    super(node);
  }

  public BooleanConstant getReturning_clause() {
    return (BooleanConstant)this.getChild(BooleanConstant.class, ValuesSingleTableInsert.RETURNING_CLAUSE);
  }

  public void setReturning_clause(BooleanConstant node) {
    super.setChild(ValuesSingleTableInsert.RETURNING_CLAUSE, node);
  }

  public int getValuesesCount() {
    return this.getChildCount(ValuesSingleTableInsert.VALUES);
  }

  public Iterator<Values> valueses() {
    return this.children(Values.class, ValuesSingleTableInsert.VALUES);
  }

  public List<Values> getValueses() {
    return this.getChildren(Values.class, ValuesSingleTableInsert.VALUES);
  }

  public void addValues(Values node) {
    this.addChild(ValuesSingleTableInsert.VALUES, node);
  }

  public void insertValues(Values prev, Values node) {
    this.insertChild(prev, ValuesSingleTableInsert.VALUES, node);
  }


  public static ValuesSingleTableInsert newInstance(SModel sm, boolean init) {
    return (ValuesSingleTableInsert)SModelUtil_new.instantiateConceptDeclaration("swiftteams.nikitin.sql.structure.ValuesSingleTableInsert", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ValuesSingleTableInsert newInstance(SModel sm) {
    return ValuesSingleTableInsert.newInstance(sm, false);
  }

}
