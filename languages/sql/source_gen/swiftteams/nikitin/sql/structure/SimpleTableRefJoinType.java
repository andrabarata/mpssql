package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import java.util.List;
import java.util.LinkedList;

public enum SimpleTableRefJoinType {
  _null("", " "),
  CROSS("CROSS", "CROSS"),
  INNER("INNER", "INNER"),
  LEFT_OUTER("LEFT OUTER", "LEFT OUTER"),
  RIGHT_OUTER("RIGHT OUTER", "RIGHT OUTER");

  private String myName;
  private String myValue;

  SimpleTableRefJoinType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public static List<SimpleTableRefJoinType> getConstants() {
    List<SimpleTableRefJoinType> list = new LinkedList<SimpleTableRefJoinType>();
    list.add(SimpleTableRefJoinType._null);
    list.add(SimpleTableRefJoinType.CROSS);
    list.add(SimpleTableRefJoinType.INNER);
    list.add(SimpleTableRefJoinType.LEFT_OUTER);
    list.add(SimpleTableRefJoinType.RIGHT_OUTER);
    return list;
  }

  public static SimpleTableRefJoinType getDefault() {
    return SimpleTableRefJoinType._null;
  }

  public static SimpleTableRefJoinType parseValue(String value) {
    if (value == null) {
      return SimpleTableRefJoinType.getDefault();
    }
    if (value.equals(SimpleTableRefJoinType._null.getValueAsString())) {
      return SimpleTableRefJoinType._null;
    }
    if (value.equals(SimpleTableRefJoinType.CROSS.getValueAsString())) {
      return SimpleTableRefJoinType.CROSS;
    }
    if (value.equals(SimpleTableRefJoinType.INNER.getValueAsString())) {
      return SimpleTableRefJoinType.INNER;
    }
    if (value.equals(SimpleTableRefJoinType.LEFT_OUTER.getValueAsString())) {
      return SimpleTableRefJoinType.LEFT_OUTER;
    }
    if (value.equals(SimpleTableRefJoinType.RIGHT_OUTER.getValueAsString())) {
      return SimpleTableRefJoinType.RIGHT_OUTER;
    }
    return SimpleTableRefJoinType.getDefault();
  }


  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

}
