package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class CreateQueryCommitModifier extends BaseConcept {
  public static final String concept = "swiftteams.nikitin.sql.structure.CreateQueryCommitModifier";
  public static final String MODIFIER = "modifier";

  public CreateQueryCommitModifier(SNode node) {
    super(node);
  }

  public CreateQueryCommitModifierData getModifier() {
    String value = super.getProperty(CreateQueryCommitModifier.MODIFIER);
    return CreateQueryCommitModifierData.parseValue(value);
  }

  public void setModifier(CreateQueryCommitModifierData value) {
    super.setProperty(CreateQueryCommitModifier.MODIFIER, value.getValueAsString());
  }


  public static CreateQueryCommitModifier newInstance(SModel sm, boolean init) {
    return (CreateQueryCommitModifier)SModelUtil_new.instantiateConceptDeclaration("swiftteams.nikitin.sql.structure.CreateQueryCommitModifier", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static CreateQueryCommitModifier newInstance(SModel sm) {
    return CreateQueryCommitModifier.newInstance(sm, false);
  }

}
