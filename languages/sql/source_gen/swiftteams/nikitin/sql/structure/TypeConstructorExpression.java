package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.BooleanConstant;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TypeConstructorExpression extends Expression {
  public static final String concept = "swiftteams.nikitin.sql.structure.TypeConstructorExpression";
  public static final String SCHEMA = "schema";
  public static final String TYPE_NAME = "type_name";

  public TypeConstructorExpression(SNode node) {
    super(node);
  }

  public BooleanConstant getSchema() {
    return (BooleanConstant)this.getReferent(BooleanConstant.class, TypeConstructorExpression.SCHEMA);
  }

  public void setSchema(BooleanConstant node) {
    super.setReferent(TypeConstructorExpression.SCHEMA, node);
  }

  public BooleanConstant getType_name() {
    return (BooleanConstant)this.getReferent(BooleanConstant.class, TypeConstructorExpression.TYPE_NAME);
  }

  public void setType_name(BooleanConstant node) {
    super.setReferent(TypeConstructorExpression.TYPE_NAME, node);
  }


  public static TypeConstructorExpression newInstance(SModel sm, boolean init) {
    return (TypeConstructorExpression)SModelUtil_new.instantiateConceptDeclaration("swiftteams.nikitin.sql.structure.TypeConstructorExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TypeConstructorExpression newInstance(SModel sm) {
    return TypeConstructorExpression.newInstance(sm, false);
  }

}
