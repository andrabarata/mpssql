package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import java.util.List;
import java.util.LinkedList;

public enum SimpleNonListComparisonConditionData {
  eq("=", "="),
  ne1("!=", "!="),
  ne2("^=", "^="),
  ne3("<>", "<>"),
  g(">", ">"),
  l("<", "<"),
  ge(">=", ">="),
  le("<=", "<=");

  private String myName;
  private String myValue;

  SimpleNonListComparisonConditionData(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public static List<SimpleNonListComparisonConditionData> getConstants() {
    List<SimpleNonListComparisonConditionData> list = new LinkedList<SimpleNonListComparisonConditionData>();
    list.add(SimpleNonListComparisonConditionData.eq);
    list.add(SimpleNonListComparisonConditionData.ne1);
    list.add(SimpleNonListComparisonConditionData.ne2);
    list.add(SimpleNonListComparisonConditionData.ne3);
    list.add(SimpleNonListComparisonConditionData.g);
    list.add(SimpleNonListComparisonConditionData.l);
    list.add(SimpleNonListComparisonConditionData.ge);
    list.add(SimpleNonListComparisonConditionData.le);
    return list;
  }

  public static SimpleNonListComparisonConditionData getDefault() {
    return SimpleNonListComparisonConditionData.eq;
  }

  public static SimpleNonListComparisonConditionData parseValue(String value) {
    if (value == null) {
      return SimpleNonListComparisonConditionData.getDefault();
    }
    if (value.equals(SimpleNonListComparisonConditionData.eq.getValueAsString())) {
      return SimpleNonListComparisonConditionData.eq;
    }
    if (value.equals(SimpleNonListComparisonConditionData.ne1.getValueAsString())) {
      return SimpleNonListComparisonConditionData.ne1;
    }
    if (value.equals(SimpleNonListComparisonConditionData.ne2.getValueAsString())) {
      return SimpleNonListComparisonConditionData.ne2;
    }
    if (value.equals(SimpleNonListComparisonConditionData.ne3.getValueAsString())) {
      return SimpleNonListComparisonConditionData.ne3;
    }
    if (value.equals(SimpleNonListComparisonConditionData.g.getValueAsString())) {
      return SimpleNonListComparisonConditionData.g;
    }
    if (value.equals(SimpleNonListComparisonConditionData.l.getValueAsString())) {
      return SimpleNonListComparisonConditionData.l;
    }
    if (value.equals(SimpleNonListComparisonConditionData.ge.getValueAsString())) {
      return SimpleNonListComparisonConditionData.ge;
    }
    if (value.equals(SimpleNonListComparisonConditionData.le.getValueAsString())) {
      return SimpleNonListComparisonConditionData.le;
    }
    return SimpleNonListComparisonConditionData.getDefault();
  }


  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

}
