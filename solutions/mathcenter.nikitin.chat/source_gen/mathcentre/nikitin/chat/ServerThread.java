package mathcentre.nikitin.chat;

/*Generated by MPS */

import java.net.Socket;
import java.io.PrintWriter;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import swiftteams.nikitin.sql.runtime.TableRow;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import swiftteams.nikitin.sql.runtime.ArrayListCreator;
import swiftteams.nikitin.sql.runtime.ConnectionManager;
import java.sql.Timestamp;
import java.sql.SQLException;
import java.io.IOException;

public class ServerThread extends Thread {

  private Socket socket = null;
  private boolean clientOnline = false;
  private PrintWriter out = null;

  public ServerThread(Socket socket) {
    super("ServerThread");
    this.socket = socket;
  }

  public void sendLine(String line) {
    if (this.clientOnline) {
      this.out.println(line);
    }
  }

  public void run() {
    try {
      this.out = new PrintWriter(this.socket.getOutputStream(), true);
      BufferedReader in = new BufferedReader(new InputStreamReader(this.socket.getInputStream()));
      String inputLine;
      String outputLine;
      Protocol protocol = new Protocol();
      this.clientOnline = true;
      this.sendLine(Const.greeting);
      String param = ", ip: " + this.socket.getInetAddress().getHostAddress();
      try {
        for(TableRow element : ListSequence.fromList(ArrayListCreator.create(ConnectionManager.query("SELECT   * FROM " + "" + "history" + "   " + "" + "ORDER BY" + " " + "history.timestamp")))) {
          this.out.println(Server.getTime(((Timestamp)element.getProperty("timestamp"))) + " " + ((String)element.getProperty("login")) + Const.separator + ((String)element.getProperty("message")));
        }
      } catch (SQLException se) {
      }
      while ((inputLine = in.readLine()) != null) {
        outputLine = protocol.processInput(inputLine, param);
        Server.notityAllClients(outputLine, protocol.getName());
      }
      protocol.onExit();
      this.clientOnline = false;
      this.out.close();
      in.close();
      this.socket.close();
    } catch (IOException e) {
      e.printStackTrace();
    }
  }

}
