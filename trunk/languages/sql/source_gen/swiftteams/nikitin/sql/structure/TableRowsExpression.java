package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class TableRowsExpression extends Expression {
  public static final String concept = "swiftteams.nikitin.sql.structure.TableRowsExpression";
  public static final String VALUES = "values";

  public TableRowsExpression(SNode node) {
    super(node);
  }

  public int getValuesesCount() {
    return this.getChildCount(TableRowsExpression.VALUES);
  }

  public Iterator<Expression> valueses() {
    return this.children(Expression.class, TableRowsExpression.VALUES);
  }

  public List<Expression> getValueses() {
    return this.getChildren(Expression.class, TableRowsExpression.VALUES);
  }

  public void addValues(Expression node) {
    this.addChild(TableRowsExpression.VALUES, node);
  }

  public void insertValues(Expression prev, Expression node) {
    this.insertChild(prev, TableRowsExpression.VALUES, node);
  }


  public static TableRowsExpression newInstance(SModel sm, boolean init) {
    return (TableRowsExpression)SModelUtil_new.instantiateConceptDeclaration("swiftteams.nikitin.sql.structure.TableRowsExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static TableRowsExpression newInstance(SModel sm) {
    return TableRowsExpression.newInstance(sm, false);
  }

}
