package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LikeCondition extends Condition {
  public static final String concept = "swiftteams.nikitin.sql.structure.LikeCondition";
  public static final String MODIFIER = "modifier";
  public static final String CHAR1 = "char1";
  public static final String CHAR2 = "char2";
  public static final String ESCAPE = "escape";

  public LikeCondition(SNode node) {
    super(node);
  }

  public LikeConditionModifier getModifier() {
    String value = super.getProperty(LikeCondition.MODIFIER);
    return LikeConditionModifier.parseValue(value);
  }

  public void setModifier(LikeConditionModifier value) {
    super.setProperty(LikeCondition.MODIFIER, value.getValueAsString());
  }

  public Expression getChar1() {
    return (Expression)this.getChild(Expression.class, LikeCondition.CHAR1);
  }

  public void setChar1(Expression node) {
    super.setChild(LikeCondition.CHAR1, node);
  }

  public Expression getChar2() {
    return (Expression)this.getChild(Expression.class, LikeCondition.CHAR2);
  }

  public void setChar2(Expression node) {
    super.setChild(LikeCondition.CHAR2, node);
  }

  public LikeConditionEscape getEscape() {
    return (LikeConditionEscape)this.getChild(LikeConditionEscape.class, LikeCondition.ESCAPE);
  }

  public void setEscape(LikeConditionEscape node) {
    super.setChild(LikeCondition.ESCAPE, node);
  }


  public static LikeCondition newInstance(SModel sm, boolean init) {
    return (LikeCondition)SModelUtil_new.instantiateConceptDeclaration("swiftteams.nikitin.sql.structure.LikeCondition", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LikeCondition newInstance(SModel sm) {
    return LikeCondition.newInstance(sm, false);
  }

}
