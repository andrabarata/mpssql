package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class ColumnRelationalProperty extends RelationalProperty implements INamedConcept {
  public static final String concept = "swiftteams.nikitin.sql.structure.ColumnRelationalProperty";
  public static final String COLUMN_NAME = "columnName";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String DATATYPE = "datatype";
  public static final String EXPR = "expr";
  public static final String CONSTRAINT = "constraint";

  public ColumnRelationalProperty(SNode node) {
    super(node);
  }

  public String getColumnName() {
    return this.getProperty(ColumnRelationalProperty.COLUMN_NAME);
  }

  public void setColumnName(String value) {
    this.setProperty(ColumnRelationalProperty.COLUMN_NAME, value);
  }

  public String getName() {
    return this.getProperty(ColumnRelationalProperty.NAME);
  }

  public void setName(String value) {
    this.setProperty(ColumnRelationalProperty.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(ColumnRelationalProperty.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(ColumnRelationalProperty.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(ColumnRelationalProperty.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(ColumnRelationalProperty.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(ColumnRelationalProperty.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(ColumnRelationalProperty.VIRTUAL_PACKAGE, value);
  }

  public DataType getDatatype() {
    return (DataType)this.getChild(DataType.class, ColumnRelationalProperty.DATATYPE);
  }

  public void setDatatype(DataType node) {
    super.setChild(ColumnRelationalProperty.DATATYPE, node);
  }

  public Expression getExpr() {
    return (Expression)this.getChild(Expression.class, ColumnRelationalProperty.EXPR);
  }

  public void setExpr(Expression node) {
    super.setChild(ColumnRelationalProperty.EXPR, node);
  }

  public AbstractInlineConstraint getConstraint() {
    return (AbstractInlineConstraint)this.getChild(AbstractInlineConstraint.class, ColumnRelationalProperty.CONSTRAINT);
  }

  public void setConstraint(AbstractInlineConstraint node) {
    super.setChild(ColumnRelationalProperty.CONSTRAINT, node);
  }


  public static ColumnRelationalProperty newInstance(SModel sm, boolean init) {
    return (ColumnRelationalProperty)SModelUtil_new.instantiateConceptDeclaration("swiftteams.nikitin.sql.structure.ColumnRelationalProperty", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static ColumnRelationalProperty newInstance(SModel sm) {
    return ColumnRelationalProperty.newInstance(sm, false);
  }

}
