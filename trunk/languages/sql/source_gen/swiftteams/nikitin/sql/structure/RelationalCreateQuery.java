package swiftteams.nikitin.sql.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.BooleanConstant;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class RelationalCreateQuery extends CreateQuery {
  public static final String concept = "swiftteams.nikitin.sql.structure.RelationalCreateQuery";
  public static final String MODIFIER = "modifier";
  public static final String MOD = "mod";
  public static final String PHYSICAL_PROPERTIES = "physical_properties";
  public static final String TABLE_PROPERTIES = "table_properties";
  public static final String RELATIONAL_PROPERTIES = "relational_properties";

  public RelationalCreateQuery(SNode node) {
    super(node);
  }

  public CreateQueryModifierData getModifier() {
    String value = super.getProperty(RelationalCreateQuery.MODIFIER);
    return CreateQueryModifierData.parseValue(value);
  }

  public void setModifier(CreateQueryModifierData value) {
    super.setProperty(RelationalCreateQuery.MODIFIER, value.getValueAsString());
  }

  public CreateQueryCommitModifier getMod() {
    return (CreateQueryCommitModifier)this.getChild(CreateQueryCommitModifier.class, RelationalCreateQuery.MOD);
  }

  public void setMod(CreateQueryCommitModifier node) {
    super.setChild(RelationalCreateQuery.MOD, node);
  }

  public BooleanConstant getPhysical_properties() {
    return (BooleanConstant)this.getChild(BooleanConstant.class, RelationalCreateQuery.PHYSICAL_PROPERTIES);
  }

  public void setPhysical_properties(BooleanConstant node) {
    super.setChild(RelationalCreateQuery.PHYSICAL_PROPERTIES, node);
  }

  public BooleanConstant getTable_properties() {
    return (BooleanConstant)this.getChild(BooleanConstant.class, RelationalCreateQuery.TABLE_PROPERTIES);
  }

  public void setTable_properties(BooleanConstant node) {
    super.setChild(RelationalCreateQuery.TABLE_PROPERTIES, node);
  }

  public int getRelational_propertiesesCount() {
    return this.getChildCount(RelationalCreateQuery.RELATIONAL_PROPERTIES);
  }

  public Iterator<RelationalProperty> relational_propertieses() {
    return this.children(RelationalProperty.class, RelationalCreateQuery.RELATIONAL_PROPERTIES);
  }

  public List<RelationalProperty> getRelational_propertieses() {
    return this.getChildren(RelationalProperty.class, RelationalCreateQuery.RELATIONAL_PROPERTIES);
  }

  public void addRelational_properties(RelationalProperty node) {
    this.addChild(RelationalCreateQuery.RELATIONAL_PROPERTIES, node);
  }

  public void insertRelational_properties(RelationalProperty prev, RelationalProperty node) {
    this.insertChild(prev, RelationalCreateQuery.RELATIONAL_PROPERTIES, node);
  }


  public static RelationalCreateQuery newInstance(SModel sm, boolean init) {
    return (RelationalCreateQuery)SModelUtil_new.instantiateConceptDeclaration("swiftteams.nikitin.sql.structure.RelationalCreateQuery", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static RelationalCreateQuery newInstance(SModel sm) {
    return RelationalCreateQuery.newInstance(sm, false);
  }

}
